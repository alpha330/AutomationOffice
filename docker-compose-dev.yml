services:
  arg_aut_backend:
    build:
      context: .
      dockerfile: dockerfiles/dev/django/dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./core_backend:/usr/src/app
    ports:
      - "8000:8000"
    env_file:
      - ./envs/dev/django/.env
    depends_on:
      - db_dev
      - redis_dev
  worker_arg_celery:
    hostname: "arg-celery"
    container_name: worker_arg_aut_celery
    build: 
      context: .
      dockerfile: dockerfiles/dev/django/dockerfile     
    command: celery -A core_backend worker --loglevel=info
    env_file:
      - ./envs/dev/django/.env
    volumes:
      - ./core_backend:/usr/src/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - arg_aut_backend
      - redis_dev
    
  worker_beats_arg_celery:
    hostname: "arg-celery-beat"
    container_name: worker_beats_arg_aut_celery
    build: 
      context: .
      dockerfile: dockerfiles/dev/django/dockerfile       
    command: celery -A core_backend beat --loglevel=info
    env_file:
      - ./envs/dev/django/.env
    volumes:
      - ./core_backend:/usr/src/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - arg_aut_backend
      - redis_dev
  arg_aut_frontend:
    hostname: "argoutfrontend"
    container_name: arg-out-frontend
    build: 
      context: .
      dockerfile: ./dockerfiles/dev/NextJS/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./app_front:/usr/src/app
      - /usr/src/app/node_modules
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /var/run/docker.sock:/var/run/docker.sock  
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - arg_aut_backend
    
  db_dev:
    image: postgres:15-alpine
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=fa_IR.UTF-8"

  redis_dev:
    image: redis:7-alpine
    command : redis-server --port 6380 --save 60 1 --loglevel warning  
    ports:
       - "6380:6380"    
    environment:
      - TZ=Asia/Tehran
      - ServerOptions__HostName=accountsotaredis
    volumes:
      - redis_data_dev:/data
  
  smtp4dev:
      image: rnwood/smtp4dev:v3
      restart: always
      ports:
        - '5001:80'
        - '25:25'
        - '143:143'
      volumes:
        - smtp4dev-data:/smtp4dev
      environment:
        - ServerOptions__HostName=smtp4dev

volumes:
  smtp4dev-data:
  postgres_data_dev:
  redis_data_dev: