/** @jsxImportSource @emotion/react */
import { css } from "@emotion/react";
import Head from "next/head";
import { H1,Paragraph,Inputs,Button } from "@/components";
import { useState } from "react";
import { notifyEngine } from "@/utils/notifyEngine";
import { useDispatch,useSelector } from "react-redux";
import { RESET_PASSWORD } from "@/actions/auth";
import { useRouter } from "next/router";
import Link from "next/link";

const ResetPass = () => {
    const [validateError,setValidateError] = useState(false)
    const [authCode,setAuthCode] = useState("")
    const router = useRouter()
    const dispatch = useDispatch()
    const register = useSelector(state=>state.auth)
    const [password1,setPassword1] = useState("")
    const [password2,setPassword2] = useState("")

    const onChangeAuthCode = (e) =>{
        setAuthCode(e.target.value)
    }


    const mainDivContact = css`
        width:100%;
        height:100vh;
        background-color:rgb(8, 0, 83);
        display:flex;
        align-items:center;
        justify-content:center;
        flex-direction:column;
        color:white;
        postition:relative;
        overflow:hidden;
    `
    const headerDivContact = css`
        width:100%;
        height:fit-content;
        display:flex;
        align-items:center;
        justify-content:center;
        background-image:linear-gradient(to bottom right, rgba(0, 6, 61, 0.48) , rgba(0, 6, 61, 0.48)) ,url(./images/Blog/blog.jpg);
        background-size:cover;
        background-position:center;
        background-repeat:no-repeat;
        padding:4rem 0;
        position:absolute;
        top:5%;
        animation: topToDown 1s ease-in;
        `

    const sectionInfoSubmit = css`
        width:20%;
        height:20%;
        border-radius:10px;
        display:flex;
        align-items:center;
        justify-content:space-between;
        flex-direction:column;
        direction:rtl;
        padding:1rem 0;
        ::-webkit-scrollbar {
          display: none;
        }
          animation:dropDownAnim 2s ease-in;
    `
    const forgetRegisterDev = css`
        width:100%;
        height:fit-content;
        padding:1rem 0;
        display:flex;
        align-items:center;
        justify-content:center;
        flex-direction:row;
        p{
            padding: .5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
            transition: all 600ms ease-in-out;
            &:hover{
                background-color: #008cff6e;
            }
        }
        
        a{
            color:white;
            text-decoration:none;
            cursor:pointer;

        }
    `
     const btnPosition = css`margin-bottom:2rem; width: 100%; display:flex; align-items:center; justify-content:center;`

    const onChangePassword1 = (e) =>{
        setPassword1(e.target.value)
    }

    const onChangePassword2 = (e) =>{
        setPassword2(e.target.value)
    }

    const submitBehaviour = async(e) =>{
        if (e){
            e.preventDefault()
        }
        const data = {
            "temp_code": authCode,
            "new_password": password1,
            "new_password_1": password2,
          }
        const res = await dispatch(RESET_PASSWORD(data));
        if(res.STATUS === "NOK"){
            notifyEngine(res.message,"error")
        }else{
            notifyEngine(res.message,"success")
            router.push("/login")
        }  
    }

    

    return(
        <>
        <Head>
          <title>سرزمین من | فراموشی رمز عبور</title>
          <meta name="description" content="Generated by Ali Mahmoodi" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/icon.ico" />
        </Head>
        <div css={mainDivContact}>
            <div css={headerDivContact}>
                <H1>بازنشانی رمز عبور</H1>
            </div>
            <form onSubmit={submitBehaviour} css={sectionInfoSubmit}>
                <div css={css`margin-bottom:2rem; width: 100%;`}>
                    <Inputs inputDef={onChangePassword1} name={"password1"} label={" رمز عبور "} type={"password"} value={password1}/>           
                </div>
                <div css={css`margin-bottom:2rem; width: 100%;`}>
                    <Inputs inputDef={onChangePassword2} name={"password2"} label={"  تکرار رمز عبور "} type={"password"} value={password2}/>           
                </div>
                <div css={css`margin-bottom:2rem; width: 100%;`}>
                    <Inputs inputDef={onChangeAuthCode} name={"authcode"} label={"کد وریفای"} type={"text"} value={authCode}/>           
                </div>
                <div css={css`margin-bottom:2rem; color:red; width: 100%;`}>
                    {validateError && <Paragraph>شماره موبایل صحیح نمی باشد</Paragraph>  }                            
                </div>  
                <div css={btnPosition}>
                    <Button loading={register.loading} type={"submit"}>تغییر رمز</Button>          
                </div>  
                <div css={forgetRegisterDev}>                    
                    <Link href={"/register"}>
                        <Paragraph>حساب ندارم؟</Paragraph>
                    </Link>                    
                </div>                                      
            </form>
        </div>

        </>
        
    )
}

export default ResetPass